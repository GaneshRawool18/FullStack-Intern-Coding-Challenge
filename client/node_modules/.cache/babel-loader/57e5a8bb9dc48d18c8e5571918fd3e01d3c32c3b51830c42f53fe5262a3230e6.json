{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import SearchBox from '../components/SearchBox';\n// import { FaStar, FaStore, FaUsers, FaStarHalfAlt } from 'react-icons/fa';\n\n// const AdminDashboard = () => {\n//   const [storeFilters, setStoreFilters] = useState({\n//     name: '',\n//     address: '',\n//     rating: ''\n//   });\n\n//   const [stats, setStats] = useState({\n//     totalUsers: 0,\n//     totalStores: 0,\n//     totalRatings: 0\n//   });\n\n//   const [filteredStores, setFilteredStores] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState(null);\n\n//   // Fetch dashboard statistics\n//   useEffect(() => {\n//     const fetchStats = async () => {\n//       try {\n//         const response = await axios.get('/api/admin/dashboard/stats');\n//         setStats(response.data);\n//       } catch (err) {\n//         console.error('Error fetching stats:', err);\n//       }\n//     };\n//     fetchStats();\n//   }, []);\n\n//   const handleSearch = async (filters) => {\n//     setLoading(true);\n//     setError(null);\n\n//     try {\n//       // Only include non-empty values in the search params\n//       const searchParams = Object.fromEntries(\n//         Object.entries(filters).filter(([_, value]) => value !== '')\n//       );\n\n//       const response = await axios.get('/api/admin/stores/search', {\n//         params: searchParams\n//       });\n//       setFilteredStores(response.data);\n//     } catch (err) {\n//       setError('Error searching stores. Please try again.');\n//       console.error('Search error:', err);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"container mt-4\">\n//       <h1 className=\"mb-4\">Admin Dashboard</h1>\n\n//       {/* Statistics Cards */}\n//       <div className=\"row mb-4\">\n//         <div className=\"col-md-4\">\n//           <div className=\"card bg-primary text-white\">\n//             <div className=\"card-body\">\n//               <div className=\"d-flex justify-content-between align-items-center\">\n//                 <div>\n//                   <h6 className=\"card-title\">Total Users</h6>\n//                   <h2 className=\"mb-0\">{stats.totalUsers}</h2>\n//                 </div>\n//                 <FaUsers size={40} opacity={0.5} />\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//         <div className=\"col-md-4\">\n//           <div className=\"card bg-success text-white\">\n//             <div className=\"card-body\">\n//               <div className=\"d-flex justify-content-between align-items-center\">\n//                 <div>\n//                   <h6 className=\"card-title\">Total Stores</h6>\n//                   <h2 className=\"mb-0\">{stats.totalStores}</h2>\n//                 </div>\n//                 <FaStore size={40} opacity={0.5} />\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//         <div className=\"col-md-4\">\n//           <div className=\"card bg-warning text-white\">\n//             <div className=\"card-body\">\n//               <div className=\"d-flex justify-content-between align-items-center\">\n//                 <div>\n//                   <h6 className=\"card-title\">Total Ratings</h6>\n//                   <h2 className=\"mb-0\">{stats.totalRatings}</h2>\n//                 </div>\n//                 <FaStarHalfAlt size={40} opacity={0.5} />\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Search Box */}\n//       <SearchBox \n//         filters={storeFilters} \n//         setFilters={setStoreFilters}\n//         type=\"store\"\n//         onSearch={handleSearch}\n//       />\n\n//       {/* Loading Spinner */}\n//       {loading && (\n//         <div className=\"text-center my-4\">\n//           <div className=\"spinner-border text-primary\" role=\"status\">\n//             <span className=\"visually-hidden\">Loading...</span>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Error Alert */}\n//       {error && (\n//         <div className=\"alert alert-danger\" role=\"alert\">\n//           {error}\n//         </div>\n//       )}\n\n//       {/* Store Cards */}\n//       <div className=\"row mt-4\">\n//         {filteredStores.length > 0 ? (\n//           filteredStores.map(store => (\n//             <div key={store._id} className=\"col-md-4 mb-4\">\n//               <div className=\"card h-100 shadow-sm\">\n//                 {store.imageUrl && (\n//                   <img \n//                     src={store.imageUrl} \n//                     className=\"card-img-top\" \n//                     alt={store.name}\n//                     style={{ height: '200px', objectFit: 'cover' }}\n//                   />\n//                 )}\n//                 <div className=\"card-body\">\n//                   <h5 className=\"card-title\">{store.name}</h5>\n//                   <div className=\"mb-2\">\n//                     {[...Array(5)].map((_, index) => (\n//                       <FaStar\n//                         key={index}\n//                         className={index < store.averageRating ? 'text-warning' : 'text-muted'}\n//                       />\n//                     ))}\n//                     <span className=\"ms-2\">\n//                       ({store.averageRating?.toFixed(1)}) \n//                       <small className=\"text-muted\">\n//                         {store.totalRatings} reviews\n//                       </small>\n//                     </span>\n//                   </div>\n//                   <p className=\"card-text\">{store.address}</p>\n//                   {store.email && (\n//                     <p className=\"card-text\">\n//                       <small className=\"text-muted\">{store.email}</small>\n//                     </p>\n//                   )}\n//                   <div className=\"mt-3\">\n//                     <button \n//                       className=\"btn btn-outline-primary btn-sm me-2\"\n//                       onClick={() => window.location.href = `/admin/stores/${store._id}/edit`}\n//                     >\n//                       Edit Store\n//                     </button>\n//                     <button \n//                       className=\"btn btn-outline-danger btn-sm\"\n//                       onClick={() => {\n//                         if(window.confirm('Are you sure you want to delete this store?')) {\n//                           // Add delete functionality\n//                         }\n//                       }}\n//                     >\n//                       Delete Store\n//                     </button>\n//                   </div>\n//                 </div>\n//               </div>\n//             </div>\n//           ))\n//         ) : (\n//           <div className=\"col-12 text-center\">\n//             <p className=\"text-muted\">No stores found matching your criteria</p>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default AdminDashboard;","map":{"version":3,"names":[],"sources":["C:/Users/rawoo/Documents/202201921_Ganesh Rawool/RateMyStore/client/src/pages/AdminDashboard.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import SearchBox from '../components/SearchBox';\r\n// import { FaStar, FaStore, FaUsers, FaStarHalfAlt } from 'react-icons/fa';\r\n\r\n// const AdminDashboard = () => {\r\n//   const [storeFilters, setStoreFilters] = useState({\r\n//     name: '',\r\n//     address: '',\r\n//     rating: ''\r\n//   });\r\n  \r\n//   const [stats, setStats] = useState({\r\n//     totalUsers: 0,\r\n//     totalStores: 0,\r\n//     totalRatings: 0\r\n//   });\r\n  \r\n//   const [filteredStores, setFilteredStores] = useState([]);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   // Fetch dashboard statistics\r\n//   useEffect(() => {\r\n//     const fetchStats = async () => {\r\n//       try {\r\n//         const response = await axios.get('/api/admin/dashboard/stats');\r\n//         setStats(response.data);\r\n//       } catch (err) {\r\n//         console.error('Error fetching stats:', err);\r\n//       }\r\n//     };\r\n//     fetchStats();\r\n//   }, []);\r\n\r\n//   const handleSearch = async (filters) => {\r\n//     setLoading(true);\r\n//     setError(null);\r\n    \r\n//     try {\r\n//       // Only include non-empty values in the search params\r\n//       const searchParams = Object.fromEntries(\r\n//         Object.entries(filters).filter(([_, value]) => value !== '')\r\n//       );\r\n\r\n//       const response = await axios.get('/api/admin/stores/search', {\r\n//         params: searchParams\r\n//       });\r\n//       setFilteredStores(response.data);\r\n//     } catch (err) {\r\n//       setError('Error searching stores. Please try again.');\r\n//       console.error('Search error:', err);\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container mt-4\">\r\n//       <h1 className=\"mb-4\">Admin Dashboard</h1>\r\n      \r\n//       {/* Statistics Cards */}\r\n//       <div className=\"row mb-4\">\r\n//         <div className=\"col-md-4\">\r\n//           <div className=\"card bg-primary text-white\">\r\n//             <div className=\"card-body\">\r\n//               <div className=\"d-flex justify-content-between align-items-center\">\r\n//                 <div>\r\n//                   <h6 className=\"card-title\">Total Users</h6>\r\n//                   <h2 className=\"mb-0\">{stats.totalUsers}</h2>\r\n//                 </div>\r\n//                 <FaUsers size={40} opacity={0.5} />\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"col-md-4\">\r\n//           <div className=\"card bg-success text-white\">\r\n//             <div className=\"card-body\">\r\n//               <div className=\"d-flex justify-content-between align-items-center\">\r\n//                 <div>\r\n//                   <h6 className=\"card-title\">Total Stores</h6>\r\n//                   <h2 className=\"mb-0\">{stats.totalStores}</h2>\r\n//                 </div>\r\n//                 <FaStore size={40} opacity={0.5} />\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"col-md-4\">\r\n//           <div className=\"card bg-warning text-white\">\r\n//             <div className=\"card-body\">\r\n//               <div className=\"d-flex justify-content-between align-items-center\">\r\n//                 <div>\r\n//                   <h6 className=\"card-title\">Total Ratings</h6>\r\n//                   <h2 className=\"mb-0\">{stats.totalRatings}</h2>\r\n//                 </div>\r\n//                 <FaStarHalfAlt size={40} opacity={0.5} />\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Search Box */}\r\n//       <SearchBox \r\n//         filters={storeFilters} \r\n//         setFilters={setStoreFilters}\r\n//         type=\"store\"\r\n//         onSearch={handleSearch}\r\n//       />\r\n\r\n//       {/* Loading Spinner */}\r\n//       {loading && (\r\n//         <div className=\"text-center my-4\">\r\n//           <div className=\"spinner-border text-primary\" role=\"status\">\r\n//             <span className=\"visually-hidden\">Loading...</span>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Error Alert */}\r\n//       {error && (\r\n//         <div className=\"alert alert-danger\" role=\"alert\">\r\n//           {error}\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Store Cards */}\r\n//       <div className=\"row mt-4\">\r\n//         {filteredStores.length > 0 ? (\r\n//           filteredStores.map(store => (\r\n//             <div key={store._id} className=\"col-md-4 mb-4\">\r\n//               <div className=\"card h-100 shadow-sm\">\r\n//                 {store.imageUrl && (\r\n//                   <img \r\n//                     src={store.imageUrl} \r\n//                     className=\"card-img-top\" \r\n//                     alt={store.name}\r\n//                     style={{ height: '200px', objectFit: 'cover' }}\r\n//                   />\r\n//                 )}\r\n//                 <div className=\"card-body\">\r\n//                   <h5 className=\"card-title\">{store.name}</h5>\r\n//                   <div className=\"mb-2\">\r\n//                     {[...Array(5)].map((_, index) => (\r\n//                       <FaStar\r\n//                         key={index}\r\n//                         className={index < store.averageRating ? 'text-warning' : 'text-muted'}\r\n//                       />\r\n//                     ))}\r\n//                     <span className=\"ms-2\">\r\n//                       ({store.averageRating?.toFixed(1)}) \r\n//                       <small className=\"text-muted\">\r\n//                         {store.totalRatings} reviews\r\n//                       </small>\r\n//                     </span>\r\n//                   </div>\r\n//                   <p className=\"card-text\">{store.address}</p>\r\n//                   {store.email && (\r\n//                     <p className=\"card-text\">\r\n//                       <small className=\"text-muted\">{store.email}</small>\r\n//                     </p>\r\n//                   )}\r\n//                   <div className=\"mt-3\">\r\n//                     <button \r\n//                       className=\"btn btn-outline-primary btn-sm me-2\"\r\n//                       onClick={() => window.location.href = `/admin/stores/${store._id}/edit`}\r\n//                     >\r\n//                       Edit Store\r\n//                     </button>\r\n//                     <button \r\n//                       className=\"btn btn-outline-danger btn-sm\"\r\n//                       onClick={() => {\r\n//                         if(window.confirm('Are you sure you want to delete this store?')) {\r\n//                           // Add delete functionality\r\n//                         }\r\n//                       }}\r\n//                     >\r\n//                       Delete Store\r\n//                     </button>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           ))\r\n//         ) : (\r\n//           <div className=\"col-12 text-center\">\r\n//             <p className=\"text-muted\">No stores found matching your criteria</p>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AdminDashboard;"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}