{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rawoo\\\\Documents\\\\RateMyStore\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\n\n// Try multiple API ports in case main port is unavailable\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tryAPIPorts = async (ports = [5000, 5001, 5002, 5003, 5004, 5005]) => {\n  for (const port of ports) {\n    try {\n      const baseURL = `http://localhost:${port}`;\n      // Try to connect to the API on this port\n      const response = await fetch(`${baseURL}/api/auth/me`, {\n        method: 'HEAD',\n        timeout: 1000\n      });\n      if (response.ok || response.status === 401) {\n        // If we get a valid response or auth error, the API is running on this port\n        console.log(`API available on port ${port}`);\n        return baseURL;\n      }\n    } catch (error) {\n      // Connection failed, try next port\n      console.log(`API not available on port ${port}`);\n    }\n  }\n  // Default to first port if none work\n  return `http://localhost:${ports[0]}`;\n};\n\n// Set up API base URL (will be determined dynamically)\naxios.defaults.baseURL = 'http://localhost:5000';\n\n// Create the context\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token') || null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [apiInitialized, setApiInitialized] = useState(false);\n\n  // Initialize API base URL\n  useEffect(() => {\n    const initAPI = async () => {\n      // Only run once\n      if (apiInitialized) return;\n      try {\n        const baseURL = await tryAPIPorts();\n        axios.defaults.baseURL = baseURL;\n        console.log(`Using API at ${baseURL}`);\n        setApiInitialized(true);\n      } catch (error) {\n        console.error('Failed to find API server:', error);\n        toast.error('Could not connect to the server. Please try again later.');\n      }\n    };\n    initAPI();\n  }, [apiInitialized]);\n\n  // Set default axios headers\n  useEffect(() => {\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n    }\n  }, [token]);\n\n  // Check if user is authenticated\n  useEffect(() => {\n    const verifyUser = async () => {\n      if (!token || !apiInitialized) {\n        setLoading(false);\n        return;\n      }\n      try {\n        console.log('Verifying user token...');\n        const response = await axios.get('/api/auth/me');\n        console.log('Auth verification response:', response.data);\n        setUser(response.data.user);\n        setIsAuthenticated(true);\n      } catch (error) {\n        console.error('Auth verification error:', error);\n        localStorage.removeItem('token');\n        setToken(null);\n        setUser(null);\n        setIsAuthenticated(false);\n      } finally {\n        setLoading(false);\n      }\n    };\n    verifyUser();\n  }, [token, apiInitialized]);\n\n  // Register user\n  const register = async userData => {\n    try {\n      console.log('Registering user with data:', userData);\n      const response = await axios.post('/api/auth/register', userData);\n      console.log('Registration response:', response.data);\n      const {\n        token,\n        user\n      } = response.data;\n      localStorage.setItem('token', token);\n      setToken(token);\n      setUser(user);\n      setIsAuthenticated(true);\n      toast.success('Registration successful');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Registration error:', error);\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Registration failed';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n\n  // Login user\n  const login = async credentials => {\n    try {\n      console.log('Logging in with credentials:', credentials);\n      const response = await axios.post('/api/auth/login', credentials);\n      console.log('Login response:', response.data);\n      const {\n        token,\n        user\n      } = response.data;\n      localStorage.setItem('token', token);\n      setToken(token);\n      setUser(user);\n      setIsAuthenticated(true);\n      toast.success('Login successful');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Login error:', error);\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Login failed';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n\n  // Logout user\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n    setIsAuthenticated(false);\n    toast.info('Logged out successfully');\n  };\n\n  // Update user profile\n  const updateProfile = async userData => {\n    try {\n      const response = await axios.put(`/api/users/${user.id}`, userData);\n      setUser(response.data);\n      toast.success('Profile updated successfully');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Profile update failed';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n\n  // Value object to be provided to consumers\n  const value = {\n    user,\n    token,\n    isAuthenticated,\n    loading,\n    register,\n    login,\n    logout,\n    updateProfile\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the auth context\n_s(AuthProvider, \"Y4Lnce3Yg2aHkC6M2foXWWAluGo=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","toast","jsxDEV","_jsxDEV","tryAPIPorts","ports","port","baseURL","response","fetch","method","timeout","ok","status","console","log","error","defaults","AuthContext","AuthProvider","children","_s","user","setUser","token","setToken","localStorage","getItem","isAuthenticated","setIsAuthenticated","loading","setLoading","apiInitialized","setApiInitialized","initAPI","headers","common","verifyUser","get","data","removeItem","register","userData","post","setItem","success","_error$response","_error$response$data","message","login","credentials","_error$response2","_error$response2$data","logout","info","updateProfile","put","id","_error$response3","_error$response3$data","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/rawoo/Documents/RateMyStore/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\n// Try multiple API ports in case main port is unavailable\r\nconst tryAPIPorts = async (ports = [5000, 5001, 5002, 5003, 5004, 5005]) => {\r\n  for (const port of ports) {\r\n    try {\r\n      const baseURL = `http://localhost:${port}`;\r\n      // Try to connect to the API on this port\r\n      const response = await fetch(`${baseURL}/api/auth/me`, { method: 'HEAD', timeout: 1000 });\r\n      if (response.ok || response.status === 401) {\r\n        // If we get a valid response or auth error, the API is running on this port\r\n        console.log(`API available on port ${port}`);\r\n        return baseURL;\r\n      }\r\n    } catch (error) {\r\n      // Connection failed, try next port\r\n      console.log(`API not available on port ${port}`);\r\n    }\r\n  }\r\n  // Default to first port if none work\r\n  return `http://localhost:${ports[0]}`;\r\n};\r\n\r\n// Set up API base URL (will be determined dynamically)\r\naxios.defaults.baseURL = 'http://localhost:5000';\r\n\r\n// Create the context\r\nconst AuthContext = createContext();\r\n\r\n// Provider component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(localStorage.getItem('token') || null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [apiInitialized, setApiInitialized] = useState(false);\r\n\r\n  // Initialize API base URL\r\n  useEffect(() => {\r\n    const initAPI = async () => {\r\n      // Only run once\r\n      if (apiInitialized) return;\r\n      \r\n      try {\r\n        const baseURL = await tryAPIPorts();\r\n        axios.defaults.baseURL = baseURL;\r\n        console.log(`Using API at ${baseURL}`);\r\n        setApiInitialized(true);\r\n      } catch (error) {\r\n        console.error('Failed to find API server:', error);\r\n        toast.error('Could not connect to the server. Please try again later.');\r\n      }\r\n    };\r\n    \r\n    initAPI();\r\n  }, [apiInitialized]);\r\n\r\n  // Set default axios headers\r\n  useEffect(() => {\r\n    if (token) {\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n    } else {\r\n      delete axios.defaults.headers.common['Authorization'];\r\n    }\r\n  }, [token]);\r\n\r\n  // Check if user is authenticated\r\n  useEffect(() => {\r\n    const verifyUser = async () => {\r\n      if (!token || !apiInitialized) {\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        console.log('Verifying user token...');\r\n        const response = await axios.get('/api/auth/me');\r\n        console.log('Auth verification response:', response.data);\r\n        setUser(response.data.user);\r\n        setIsAuthenticated(true);\r\n      } catch (error) {\r\n        console.error('Auth verification error:', error);\r\n        localStorage.removeItem('token');\r\n        setToken(null);\r\n        setUser(null);\r\n        setIsAuthenticated(false);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    verifyUser();\r\n  }, [token, apiInitialized]);\r\n\r\n  // Register user\r\n  const register = async (userData) => {\r\n    try {\r\n      console.log('Registering user with data:', userData);\r\n      const response = await axios.post('/api/auth/register', userData);\r\n      console.log('Registration response:', response.data);\r\n      \r\n      const { token, user } = response.data;\r\n      \r\n      localStorage.setItem('token', token);\r\n      setToken(token);\r\n      setUser(user);\r\n      setIsAuthenticated(true);\r\n      \r\n      toast.success('Registration successful');\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      const message = error.response?.data?.message || 'Registration failed';\r\n      toast.error(message);\r\n      \r\n      return { success: false, message };\r\n    }\r\n  };\r\n\r\n  // Login user\r\n  const login = async (credentials) => {\r\n    try {\r\n      console.log('Logging in with credentials:', credentials);\r\n      const response = await axios.post('/api/auth/login', credentials);\r\n      console.log('Login response:', response.data);\r\n      \r\n      const { token, user } = response.data;\r\n      \r\n      localStorage.setItem('token', token);\r\n      setToken(token);\r\n      setUser(user);\r\n      setIsAuthenticated(true);\r\n      \r\n      toast.success('Login successful');\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      const message = error.response?.data?.message || 'Login failed';\r\n      toast.error(message);\r\n      \r\n      return { success: false, message };\r\n    }\r\n  };\r\n\r\n  // Logout user\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setToken(null);\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n    \r\n    toast.info('Logged out successfully');\r\n  };\r\n\r\n  // Update user profile\r\n  const updateProfile = async (userData) => {\r\n    try {\r\n      const response = await axios.put(`/api/users/${user.id}`, userData);\r\n      setUser(response.data);\r\n      toast.success('Profile updated successfully');\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Profile update failed';\r\n      toast.error(message);\r\n      \r\n      return { success: false, message };\r\n    }\r\n  };\r\n\r\n  // Value object to be provided to consumers\r\n  const value = {\r\n    user,\r\n    token,\r\n    isAuthenticated,\r\n    loading,\r\n    register,\r\n    login,\r\n    logout,\r\n    updateProfile\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use the auth context\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  \r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  \r\n  return context;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}