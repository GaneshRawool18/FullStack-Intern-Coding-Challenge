{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rawoo\\\\Documents\\\\RateMyStore\\\\client\\\\src\\\\pages\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { useAuth } from '../context/AuthContext';\nimport axios from 'axios';\n\n// Validation schema\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({\n  username: yup.string().required('Username is required').min(2, 'Username must be at least 2 characters').max(50, 'Username must not exceed 50 characters'),\n  email: yup.string().email('Please enter a valid email').required('Email is required'),\n  password: yup.string().required('Password is required').min(8, 'Password must be at least 8 characters').max(16, 'Password must not exceed 16 characters').matches(/[A-Z]/, 'Password must contain at least one uppercase letter').matches(/[!@#$%^&*(),.?\":{}|<>]/, 'Password must contain at least one special character'),\n  confirmPassword: yup.string().oneOf([yup.ref('password'), null], 'Passwords must match').required('Confirm password is required'),\n  role: yup.string()\n});\nconst Register = () => {\n  _s();\n  const {\n    register: registerUser\n  } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [selectedRole, setSelectedRole] = useState('user');\n  const [emailValid, setEmailValid] = useState(true);\n  const [emailMessage, setEmailMessage] = useState('');\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    watch\n  } = useForm({\n    resolver: yupResolver(schema),\n    defaultValues: {\n      role: 'user'\n    }\n  });\n\n  // Watch email and role to validate in real-time\n  const watchEmail = watch('email');\n  const watchRole = watch('role');\n\n  // Validate email domain when email or role changes\n  useEffect(() => {\n    const validateEmail = async () => {\n      // Only validate if both email and role are present\n      if (!watchEmail || !watchRole || !watchEmail.includes('@')) {\n        setEmailValid(true);\n        setEmailMessage('');\n        return;\n      }\n      try {\n        const response = await axios.post('/api/auth/validate-email', {\n          email: watchEmail,\n          role: watchRole\n        });\n        setEmailValid(response.data.valid);\n        setEmailMessage('');\n      } catch (err) {\n        var _err$response, _err$response$data;\n        setEmailValid(false);\n        setEmailMessage(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Invalid email for the selected role');\n      }\n    };\n\n    // Add a debounce to avoid too many requests\n    const timer = setTimeout(() => {\n      validateEmail();\n    }, 500);\n    return () => clearTimeout(timer);\n  }, [watchEmail, watchRole]);\n  const onSubmit = async data => {\n    // Don't submit if email is invalid for the role\n    if (!emailValid) {\n      setError(emailMessage || 'Email is not valid for the selected role');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    try {\n      // Remove confirmPassword as it's not needed for API call\n      const {\n        confirmPassword,\n        ...userData\n      } = data;\n      const result = await registerUser(userData);\n      if (result.success) {\n        navigate('/dashboard');\n      } else {\n        setError(result.message);\n      }\n    } catch (err) {\n      setError('An unexpected error occurred. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle role change to show domain requirements\n  const handleRoleChange = e => {\n    setSelectedRole(e.target.value);\n  };\n\n  // Get email domain help text based on selected role\n  const getEmailHelpText = () => {\n    switch (selectedRole) {\n      case 'admin':\n        return 'Admin accounts must use @admin.ratemystore.com domain';\n      case 'store_owner':\n        return 'Store owner accounts must use @owner.ratemystore.com domain';\n      default:\n        return 'You can use any valid email address';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"auth-title\",\n        children: \"Create an Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"auth-subtitle\",\n        children: \"Join our community and start rating stores!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"auth-form\",\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            className: \"form-label\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"username\",\n            className: `form-control ${errors.username ? 'is-invalid' : ''}`,\n            ...register('username'),\n            placeholder: \"Enter your username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), errors.username && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-error\",\n            children: errors.username.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"role\",\n            className: \"form-label\",\n            children: \"Account Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"role\",\n            className: \"form-control\",\n            ...register('role'),\n            onChange: handleRoleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"user\",\n              children: \"Regular User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"store_owner\",\n              children: \"Store Owner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"admin\",\n              children: \"Administrator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"form-label\",\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            className: `form-control ${errors.email || !emailValid ? 'is-invalid' : ''}`,\n            ...register('email'),\n            placeholder: \"Enter your email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `form-text ${!emailValid ? 'text-danger' : ''}`,\n            children: !emailValid && emailMessage ? emailMessage : getEmailHelpText()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), errors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-error\",\n            children: errors.email.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            className: \"form-label\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            className: `form-control ${errors.password ? 'is-invalid' : ''}`,\n            ...register('password'),\n            placeholder: \"Enter your password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), errors.password && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-error\",\n            children: errors.password.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            className: \"form-label\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"confirmPassword\",\n            className: `form-control ${errors.confirmPassword ? 'is-invalid' : ''}`,\n            ...register('confirmPassword'),\n            placeholder: \"Confirm your password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), errors.confirmPassword && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-error\",\n            children: errors.confirmPassword.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary btn-block\",\n          disabled: loading || !emailValid,\n          children: loading ? 'Registering...' : 'Register'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-footer\",\n          children: [\"Already have an account?\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            className: \"auth-link\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: \"true\",\n      children: `\n        .auth-container {\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          min-height: calc(100vh - 200px);\n          padding: 2rem 1rem;\n        }\n        \n        .auth-card {\n          background-color: white;\n          border-radius: var(--border-radius);\n          box-shadow: var(--shadow);\n          padding: 2rem;\n          width: 100%;\n          max-width: 480px;\n        }\n        \n        .auth-title {\n          margin-bottom: 0.5rem;\n          font-size: 1.8rem;\n          color: var(--text-color);\n        }\n        \n        .auth-subtitle {\n          color: var(--light-text);\n          margin-bottom: 2rem;\n        }\n        \n        .auth-error {\n          background-color: rgba(231, 76, 60, 0.1);\n          color: var(--error-color);\n          padding: 0.75rem;\n          border-radius: var(--border-radius);\n          margin-bottom: 1.5rem;\n        }\n        \n        .form-text {\n          font-size: 0.875rem;\n          color: var(--light-text);\n          margin-top: 0.25rem;\n        }\n        \n        .text-danger {\n          color: var(--error-color) !important;\n        }\n        \n        .auth-form {\n          margin-bottom: 1rem;\n        }\n        \n        .btn-block {\n          width: 100%;\n          margin: 1.5rem 0;\n        }\n        \n        .auth-footer {\n          text-align: center;\n          margin-top: 1rem;\n          color: var(--light-text);\n        }\n        \n        .auth-link {\n          color: var(--primary-color);\n          font-weight: 500;\n        }\n        \n        .is-invalid {\n          border-color: var(--error-color);\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"udo9men99nYwgnuw2UK9jemPNvc=\", false, function () {\n  return [useAuth, useNavigate, useForm];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","useForm","yupResolver","yup","useAuth","axios","jsxDEV","_jsxDEV","schema","object","shape","username","string","required","min","max","email","password","matches","confirmPassword","oneOf","ref","role","Register","_s","register","registerUser","navigate","loading","setLoading","error","setError","selectedRole","setSelectedRole","emailValid","setEmailValid","emailMessage","setEmailMessage","handleSubmit","formState","errors","watch","resolver","defaultValues","watchEmail","watchRole","validateEmail","includes","response","post","data","valid","err","_err$response","_err$response$data","message","timer","setTimeout","clearTimeout","onSubmit","userData","result","success","handleRoleChange","e","target","value","getEmailHelpText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","placeholder","onChange","disabled","to","jsx","_c","$RefreshReg$"],"sources":["C:/Users/rawoo/Documents/RateMyStore/client/src/pages/Register.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport axios from 'axios';\r\n\r\n// Validation schema\r\nconst schema = yup.object().shape({\r\n  username: yup\r\n    .string()\r\n    .required('Username is required')\r\n    .min(2, 'Username must be at least 2 characters')\r\n    .max(50, 'Username must not exceed 50 characters'),\r\n  email: yup\r\n    .string()\r\n    .email('Please enter a valid email')\r\n    .required('Email is required'),\r\n  password: yup\r\n    .string()\r\n    .required('Password is required')\r\n    .min(8, 'Password must be at least 8 characters')\r\n    .max(16, 'Password must not exceed 16 characters')\r\n    .matches(/[A-Z]/, 'Password must contain at least one uppercase letter')\r\n    .matches(\r\n      /[!@#$%^&*(),.?\":{}|<>]/,\r\n      'Password must contain at least one special character'\r\n    ),\r\n  confirmPassword: yup\r\n    .string()\r\n    .oneOf([yup.ref('password'), null], 'Passwords must match')\r\n    .required('Confirm password is required'),\r\n  role: yup.string()\r\n});\r\n\r\nconst Register = () => {\r\n  const { register: registerUser } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [selectedRole, setSelectedRole] = useState('user');\r\n  const [emailValid, setEmailValid] = useState(true);\r\n  const [emailMessage, setEmailMessage] = useState('');\r\n  \r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    watch\r\n  } = useForm({\r\n    resolver: yupResolver(schema),\r\n    defaultValues: {\r\n      role: 'user'\r\n    }\r\n  });\r\n  \r\n  // Watch email and role to validate in real-time\r\n  const watchEmail = watch('email');\r\n  const watchRole = watch('role');\r\n  \r\n  // Validate email domain when email or role changes\r\n  useEffect(() => {\r\n    const validateEmail = async () => {\r\n      // Only validate if both email and role are present\r\n      if (!watchEmail || !watchRole || !watchEmail.includes('@')) {\r\n        setEmailValid(true);\r\n        setEmailMessage('');\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        const response = await axios.post('/api/auth/validate-email', {\r\n          email: watchEmail,\r\n          role: watchRole\r\n        });\r\n        \r\n        setEmailValid(response.data.valid);\r\n        setEmailMessage('');\r\n      } catch (err) {\r\n        setEmailValid(false);\r\n        setEmailMessage(err.response?.data?.message || 'Invalid email for the selected role');\r\n      }\r\n    };\r\n    \r\n    // Add a debounce to avoid too many requests\r\n    const timer = setTimeout(() => {\r\n      validateEmail();\r\n    }, 500);\r\n    \r\n    return () => clearTimeout(timer);\r\n  }, [watchEmail, watchRole]);\r\n  \r\n  const onSubmit = async (data) => {\r\n    // Don't submit if email is invalid for the role\r\n    if (!emailValid) {\r\n      setError(emailMessage || 'Email is not valid for the selected role');\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    setError('');\r\n    \r\n    try {\r\n      // Remove confirmPassword as it's not needed for API call\r\n      const { confirmPassword, ...userData } = data;\r\n      \r\n      const result = await registerUser(userData);\r\n      \r\n      if (result.success) {\r\n        navigate('/dashboard');\r\n      } else {\r\n        setError(result.message);\r\n      }\r\n    } catch (err) {\r\n      setError('An unexpected error occurred. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle role change to show domain requirements\r\n  const handleRoleChange = (e) => {\r\n    setSelectedRole(e.target.value);\r\n  };\r\n\r\n  // Get email domain help text based on selected role\r\n  const getEmailHelpText = () => {\r\n    switch (selectedRole) {\r\n      case 'admin':\r\n        return 'Admin accounts must use @admin.ratemystore.com domain';\r\n      case 'store_owner':\r\n        return 'Store owner accounts must use @owner.ratemystore.com domain';\r\n      default:\r\n        return 'You can use any valid email address';\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"auth-container\">\r\n      <div className=\"auth-card\">\r\n        <h2 className=\"auth-title\">Create an Account</h2>\r\n        <p className=\"auth-subtitle\">Join our community and start rating stores!</p>\r\n        \r\n        {error && <div className=\"auth-error\">{error}</div>}\r\n        \r\n        <form className=\"auth-form\" onSubmit={handleSubmit(onSubmit)}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"username\" className=\"form-label\">\r\n              Username\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"username\"\r\n              className={`form-control ${errors.username ? 'is-invalid' : ''}`}\r\n              {...register('username')}\r\n              placeholder=\"Enter your username\"\r\n            />\r\n            {errors.username && (\r\n              <div className=\"form-error\">{errors.username.message}</div>\r\n            )}\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"role\" className=\"form-label\">\r\n              Account Type\r\n            </label>\r\n            <select\r\n              id=\"role\"\r\n              className=\"form-control\"\r\n              {...register('role')}\r\n              onChange={handleRoleChange}\r\n            >\r\n              <option value=\"user\">Regular User</option>\r\n              <option value=\"store_owner\">Store Owner</option>\r\n              <option value=\"admin\">Administrator</option>\r\n            </select>\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\" className=\"form-label\">\r\n              Email Address\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              className={`form-control ${errors.email || !emailValid ? 'is-invalid' : ''}`}\r\n              {...register('email')}\r\n              placeholder=\"Enter your email\"\r\n            />\r\n            <div className={`form-text ${!emailValid ? 'text-danger' : ''}`}>\r\n              {!emailValid && emailMessage ? emailMessage : getEmailHelpText()}\r\n            </div>\r\n            {errors.email && (\r\n              <div className=\"form-error\">{errors.email.message}</div>\r\n            )}\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\" className=\"form-label\">\r\n              Password\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              className={`form-control ${errors.password ? 'is-invalid' : ''}`}\r\n              {...register('password')}\r\n              placeholder=\"Enter your password\"\r\n            />\r\n            {errors.password && (\r\n              <div className=\"form-error\">{errors.password.message}</div>\r\n            )}\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"confirmPassword\" className=\"form-label\">\r\n              Confirm Password\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"confirmPassword\"\r\n              className={`form-control ${errors.confirmPassword ? 'is-invalid' : ''}`}\r\n              {...register('confirmPassword')}\r\n              placeholder=\"Confirm your password\"\r\n            />\r\n            {errors.confirmPassword && (\r\n              <div className=\"form-error\">{errors.confirmPassword.message}</div>\r\n            )}\r\n          </div>\r\n          \r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary btn-block\"\r\n            disabled={loading || !emailValid}\r\n          >\r\n            {loading ? 'Registering...' : 'Register'}\r\n          </button>\r\n          \r\n          <div className=\"auth-footer\">\r\n            Already have an account?{' '}\r\n            <Link to=\"/login\" className=\"auth-link\">\r\n              Login\r\n            </Link>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      \r\n      <style jsx=\"true\">{`\r\n        .auth-container {\r\n          display: flex;\r\n          justify-content: center;\r\n          align-items: center;\r\n          min-height: calc(100vh - 200px);\r\n          padding: 2rem 1rem;\r\n        }\r\n        \r\n        .auth-card {\r\n          background-color: white;\r\n          border-radius: var(--border-radius);\r\n          box-shadow: var(--shadow);\r\n          padding: 2rem;\r\n          width: 100%;\r\n          max-width: 480px;\r\n        }\r\n        \r\n        .auth-title {\r\n          margin-bottom: 0.5rem;\r\n          font-size: 1.8rem;\r\n          color: var(--text-color);\r\n        }\r\n        \r\n        .auth-subtitle {\r\n          color: var(--light-text);\r\n          margin-bottom: 2rem;\r\n        }\r\n        \r\n        .auth-error {\r\n          background-color: rgba(231, 76, 60, 0.1);\r\n          color: var(--error-color);\r\n          padding: 0.75rem;\r\n          border-radius: var(--border-radius);\r\n          margin-bottom: 1.5rem;\r\n        }\r\n        \r\n        .form-text {\r\n          font-size: 0.875rem;\r\n          color: var(--light-text);\r\n          margin-top: 0.25rem;\r\n        }\r\n        \r\n        .text-danger {\r\n          color: var(--error-color) !important;\r\n        }\r\n        \r\n        .auth-form {\r\n          margin-bottom: 1rem;\r\n        }\r\n        \r\n        .btn-block {\r\n          width: 100%;\r\n          margin: 1.5rem 0;\r\n        }\r\n        \r\n        .auth-footer {\r\n          text-align: center;\r\n          margin-top: 1rem;\r\n          color: var(--light-text);\r\n        }\r\n        \r\n        .auth-link {\r\n          color: var(--primary-color);\r\n          font-weight: 500;\r\n        }\r\n        \r\n        .is-invalid {\r\n          border-color: var(--error-color);\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}