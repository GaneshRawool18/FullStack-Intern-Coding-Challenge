{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rawoo\\\\Documents\\\\RateMyStore\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\n\n// Set base URL - try all ports in sequence if needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_PORTS = [5000, 5001, 5002, 5003, 5004, 5005];\nlet currentPortIndex = 0;\n\n// Configure axios defaults\naxios.defaults.baseURL = `http://localhost:${API_PORTS[currentPortIndex]}`;\naxios.defaults.timeout = 5000; // Set timeout to 5 seconds\n\n// Create axios interceptor to handle errors and retry with different ports\naxios.interceptors.response.use(response => response, error => {\n  // If connection error and we haven't tried all ports\n  if ((error.code === 'ECONNREFUSED' || !error.response) && currentPortIndex < API_PORTS.length - 1) {\n    // Try next port\n    currentPortIndex++;\n    const newBaseURL = `http://localhost:${API_PORTS[currentPortIndex]}`;\n    console.log(`API connection failed, trying port ${API_PORTS[currentPortIndex]}`);\n    axios.defaults.baseURL = newBaseURL;\n\n    // Return the same request with new baseURL\n    const config = error.config;\n    config.baseURL = newBaseURL;\n    return axios(config);\n  }\n  return Promise.reject(error);\n});\n\n// Create the context\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token') || null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  // Set default axios headers for auth\n  useEffect(() => {\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n    }\n  }, [token]);\n\n  // Check if user is authenticated\n  useEffect(() => {\n    const verifyUser = async () => {\n      if (!token) {\n        setLoading(false);\n        return;\n      }\n      try {\n        console.log('Verifying user token...');\n        const response = await axios.get('/api/auth/me');\n        console.log('Auth verification response:', response.data);\n        setUser(response.data.user);\n        setIsAuthenticated(true);\n      } catch (error) {\n        console.error('Auth verification error:', error);\n        localStorage.removeItem('token');\n        setToken(null);\n        setUser(null);\n        setIsAuthenticated(false);\n      } finally {\n        setLoading(false);\n      }\n    };\n    verifyUser();\n  }, [token]);\n\n  // Register user\n  const register = async userData => {\n    try {\n      console.log('Registering user with data:', userData);\n      const response = await axios.post('/api/auth/register', userData);\n      console.log('Registration response:', response.data);\n      const {\n        token,\n        user\n      } = response.data;\n      localStorage.setItem('token', token);\n      setToken(token);\n      setUser(user);\n      setIsAuthenticated(true);\n      toast.success('Registration successful');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Registration error:', error);\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Registration failed';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n\n  // Login user\n  const login = async credentials => {\n    try {\n      console.log('Logging in with credentials:', credentials);\n      const response = await axios.post('/api/auth/login', credentials);\n      console.log('Login response:', response.data);\n      const {\n        token,\n        user\n      } = response.data;\n      localStorage.setItem('token', token);\n      setToken(token);\n      setUser(user);\n      setIsAuthenticated(true);\n      toast.success('Login successful');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Login error:', error);\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Login failed';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n\n  // Logout user\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n    setIsAuthenticated(false);\n    toast.info('Logged out successfully');\n  };\n\n  // Update user profile\n  const updateProfile = async userData => {\n    try {\n      const response = await axios.put(`/api/users/${user.id}`, userData);\n      setUser(response.data);\n      toast.success('Profile updated successfully');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Profile update failed';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n\n  // Value object to be provided to consumers\n  const value = {\n    user,\n    token,\n    isAuthenticated,\n    loading,\n    register,\n    login,\n    logout,\n    updateProfile\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the auth context\n_s(AuthProvider, \"p8Kad7cp2EFa6YY4uwn3tnGBbhA=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","toast","jsxDEV","_jsxDEV","API_PORTS","currentPortIndex","defaults","baseURL","timeout","interceptors","response","use","error","code","length","newBaseURL","console","log","config","Promise","reject","AuthContext","AuthProvider","children","_s","user","setUser","token","setToken","localStorage","getItem","isAuthenticated","setIsAuthenticated","loading","setLoading","headers","common","verifyUser","get","data","removeItem","register","userData","post","setItem","success","_error$response","_error$response$data","message","login","credentials","_error$response2","_error$response2$data","logout","info","updateProfile","put","id","_error$response3","_error$response3$data","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/rawoo/Documents/RateMyStore/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\n// Set base URL - try all ports in sequence if needed\r\nconst API_PORTS = [5000, 5001, 5002, 5003, 5004, 5005];\r\nlet currentPortIndex = 0;\r\n\r\n// Configure axios defaults\r\naxios.defaults.baseURL = `http://localhost:${API_PORTS[currentPortIndex]}`;\r\naxios.defaults.timeout = 5000; // Set timeout to 5 seconds\r\n\r\n// Create axios interceptor to handle errors and retry with different ports\r\naxios.interceptors.response.use(\r\n  response => response,\r\n  error => {\r\n    // If connection error and we haven't tried all ports\r\n    if ((error.code === 'ECONNREFUSED' || !error.response) && currentPortIndex < API_PORTS.length - 1) {\r\n      // Try next port\r\n      currentPortIndex++;\r\n      const newBaseURL = `http://localhost:${API_PORTS[currentPortIndex]}`;\r\n      console.log(`API connection failed, trying port ${API_PORTS[currentPortIndex]}`);\r\n      axios.defaults.baseURL = newBaseURL;\r\n      \r\n      // Return the same request with new baseURL\r\n      const config = error.config;\r\n      config.baseURL = newBaseURL;\r\n      return axios(config);\r\n    }\r\n    \r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Create the context\r\nconst AuthContext = createContext();\r\n\r\n// Provider component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(localStorage.getItem('token') || null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Set default axios headers for auth\r\n  useEffect(() => {\r\n    if (token) {\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n    } else {\r\n      delete axios.defaults.headers.common['Authorization'];\r\n    }\r\n  }, [token]);\r\n\r\n  // Check if user is authenticated\r\n  useEffect(() => {\r\n    const verifyUser = async () => {\r\n      if (!token) {\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        console.log('Verifying user token...');\r\n        const response = await axios.get('/api/auth/me');\r\n        console.log('Auth verification response:', response.data);\r\n        setUser(response.data.user);\r\n        setIsAuthenticated(true);\r\n      } catch (error) {\r\n        console.error('Auth verification error:', error);\r\n        localStorage.removeItem('token');\r\n        setToken(null);\r\n        setUser(null);\r\n        setIsAuthenticated(false);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    verifyUser();\r\n  }, [token]);\r\n\r\n  // Register user\r\n  const register = async (userData) => {\r\n    try {\r\n      console.log('Registering user with data:', userData);\r\n      const response = await axios.post('/api/auth/register', userData);\r\n      console.log('Registration response:', response.data);\r\n      \r\n      const { token, user } = response.data;\r\n      \r\n      localStorage.setItem('token', token);\r\n      setToken(token);\r\n      setUser(user);\r\n      setIsAuthenticated(true);\r\n      \r\n      toast.success('Registration successful');\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      const message = error.response?.data?.message || 'Registration failed';\r\n      toast.error(message);\r\n      \r\n      return { success: false, message };\r\n    }\r\n  };\r\n\r\n  // Login user\r\n  const login = async (credentials) => {\r\n    try {\r\n      console.log('Logging in with credentials:', credentials);\r\n      const response = await axios.post('/api/auth/login', credentials);\r\n      console.log('Login response:', response.data);\r\n      \r\n      const { token, user } = response.data;\r\n      \r\n      localStorage.setItem('token', token);\r\n      setToken(token);\r\n      setUser(user);\r\n      setIsAuthenticated(true);\r\n      \r\n      toast.success('Login successful');\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      const message = error.response?.data?.message || 'Login failed';\r\n      toast.error(message);\r\n      \r\n      return { success: false, message };\r\n    }\r\n  };\r\n\r\n  // Logout user\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setToken(null);\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n    \r\n    toast.info('Logged out successfully');\r\n  };\r\n\r\n  // Update user profile\r\n  const updateProfile = async (userData) => {\r\n    try {\r\n      const response = await axios.put(`/api/users/${user.id}`, userData);\r\n      setUser(response.data);\r\n      toast.success('Profile updated successfully');\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Profile update failed';\r\n      toast.error(message);\r\n      \r\n      return { success: false, message };\r\n    }\r\n  };\r\n\r\n  // Value object to be provided to consumers\r\n  const value = {\r\n    user,\r\n    token,\r\n    isAuthenticated,\r\n    loading,\r\n    register,\r\n    login,\r\n    logout,\r\n    updateProfile\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use the auth context\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  \r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  \r\n  return context;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}